# Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга (ks): 
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110], ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832]. 
# Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с помощью функции cov из numpy 
# Полученные значения должны быть равны. Найдите коэффициент корреляции Пирсона с помощью ковариации 
# и среднеквадратичных отклонений двух признаков, а затем с использованием функций из библиотек numpy и pandas.

import numpy as np
import pandas as pd

# Задаем значения величины заработной платы и поведенческого кредитного скоринга
zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110]
ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832]

# Находим ковариацию с помощью функции cov из numpy
covariance_np = np.cov(zp, ks, ddof=0)[0, 1]

print("Ковариация (numpy):", covariance_np)

# Находим коэффициент корреляции Пирсона с помощью функции corrcoef из numpy
correlation_np = np.corrcoef(zp, ks)[0, 1]

print("Коэффициент корреляции Пирсона (numpy):", correlation_np)

# Создаем DataFrame из данных
data = pd.DataFrame({'zp': zp, 'ks': ks})

# Находим ковариацию с помощью функции cov из pandas
covariance_pd = data['zp'].cov(data['ks'])

print("Ковариация (pandas):", covariance_pd)

# Находим коэффициент корреляции Пирсона с помощью функции corr из pandas
correlation_pd = data['zp'].corr(data['ks'])

print("Коэффициент корреляции Пирсона (pandas):", correlation_pd)
